<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>C# &#8211; Hyrule Monk</title>
	<atom:link href="/category/c/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Thu, 03 Aug 2023 11:45:26 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.3</generator>

<image>
	<url>/wp-content/uploads/2023/07/iobeez-144px.png</url>
	<title>C# &#8211; Hyrule Monk</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Difference between var and dynamic in C#</title>
		<link>/difference-between-var-and-dynamic-in-c/</link>
		
		<dc:creator><![CDATA[rinoy]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 11:45:25 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<guid isPermaLink="false">/?p=512</guid>

					<description><![CDATA[]]></description>
		
		
		
			</item>
		<item>
		<title>Data Structures in C#</title>
		<link>/data-structures-in-c/</link>
		
		<dc:creator><![CDATA[rinoy]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 11:44:23 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[Data Structure]]></category>
		<guid isPermaLink="false">/?p=510</guid>

					<description><![CDATA[]]></description>
		
		
		
			</item>
		<item>
		<title>Different types of Classes in C#</title>
		<link>/different-types-of-classes-in-c/</link>
		
		<dc:creator><![CDATA[rinoy]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 11:39:52 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<guid isPermaLink="false">/?p=506</guid>

					<description><![CDATA[]]></description>
		
		
		
			</item>
		<item>
		<title>Singleton Design Pattern in C#</title>
		<link>/singleton-design-pattern-in-c/</link>
		
		<dc:creator><![CDATA[rinoy]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 07:09:04 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[Design Pattern]]></category>
		<guid isPermaLink="false">/?p=420</guid>

					<description><![CDATA[]]></description>
		
		
		
			</item>
		<item>
		<title>Finalize and Dispose in C#</title>
		<link>/finalize-and-dispose-in-c/</link>
		
		<dc:creator><![CDATA[rinoy]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 07:00:04 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<guid isPermaLink="false">/?p=410</guid>

					<description><![CDATA[Dispose Finalize It is used to free unmanaged resources like files, database connections etc. at any time. It can be used to free unmanaged resources (when you implement it) like files, database connections etc. held by an object before that object is destroyed. Explicitly, it is called by user code and the class which is ... <a title="Finalize and Dispose in C#" class="read-more" href="/finalize-and-dispose-in-c/" aria-label="More on Finalize and Dispose in C#">Read more</a>]]></description>
		
		
		
			</item>
		<item>
		<title>Delegates in C#</title>
		<link>/delegates-in-c/</link>
		
		<dc:creator><![CDATA[rinoy]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 06:07:00 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[Delegate]]></category>
		<guid isPermaLink="false">/?p=381</guid>

					<description><![CDATA[There are three types of delegates that can be used in C#. Single Delegate Single delegate can be used to invoke a single method. Multicast Delegate can be used to invoke multiple methods. The delegate instance can do multicasting (adding new method on existing delegate instance) using + operator and â€“ operator can be used ... <a title="Delegates in C#" class="read-more" href="/delegates-in-c/" aria-label="More on Delegates in C#">Read more</a>]]></description>
		
		
		
			</item>
		<item>
		<title>Difference between Hashtable and Dictionary in C#</title>
		<link>/difference-between-hashtable-and-dictionary-in-c/</link>
					<comments>/difference-between-hashtable-and-dictionary-in-c/#respond</comments>
		
		<dc:creator><![CDATA[rinoy]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 06:00:40 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[Dictionary]]></category>
		<category><![CDATA[Hashtable]]></category>
		<guid isPermaLink="false">/?p=374</guid>

					<description><![CDATA[Hashtable Dictionary]]></description>
		
					<wfw:commentRss>/difference-between-hashtable-and-dictionary-in-c/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Async method in C#</title>
		<link>/async-method-in-c/</link>
		
		<dc:creator><![CDATA[rinoy]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 05:50:11 +0000</pubDate>
				<category><![CDATA[C#]]></category>
		<category><![CDATA[Asynchronous Programming]]></category>
		<guid isPermaLink="false">/?p=365</guid>

					<description><![CDATA[]]></description>
		
		
		
			</item>
	</channel>
</rss>
