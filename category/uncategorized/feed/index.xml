<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Uncategorized &#8211; rinoymjoseph</title>
	<atom:link href="http://192.168.0.149/category/uncategorized/feed/?simply_static_page=90" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Sun, 30 Jul 2023 12:25:56 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.2.2</generator>
	<item>
		<title>Installation of Microshift 4.13 on RHEL 9.2</title>
		<link>/2023/07/30/installation-of-microshift-4-13-on-rhel-9-2/</link>
					<comments>/2023/07/30/installation-of-microshift-4-13-on-rhel-9-2/#respond</comments>
		
		<dc:creator><![CDATA[ability]]></dc:creator>
		<pubDate>Sun, 30 Jul 2023 12:16:48 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">/?p=23</guid>

					<description><![CDATA[[[TOC]] 1. Introduction This document explains the steps to install Microshift 4.13 on RHEL 9.2 1.1 Reference 2. Prerequisites 3. Install RHEL 9.2 in target machine 4. Installation of Microshift 5. Appendinx 5.1 Create edgenius volume group 5.2 Download pull secret for Redhat registries 5.3 Test microshift installation 6. Document History]]></description>
										<content:encoded><![CDATA[
<p>[[<em>TOC</em>]]</p>



<h1 class="wp-block-heading">1. Introduction</h1>



<p>This document explains the steps to install Microshift 4.13 on RHEL 9.2</p>



<h2 class="wp-block-heading">1.1 Reference</h2>



<figure class="wp-block-embed"><div class="wp-block-embed__wrapper">
https://access.redhat.com/documentation/en-us/red_hat_build_of_microshift/4.13/html/installing/microshift-install-rpm
</div></figure>



<h1 class="wp-block-heading">2. Prerequisites</h1>



<ul>
<li>Add an extra hard disk for data persistence.</li>
</ul>



<h1 class="wp-block-heading">3. Install RHEL 9.2 in target machine</h1>



<ul>
<li>Download &#8216;Red Hat Enterprise Linux 9.2 Binary DVD&#8217; from https://access.redhat.com/downloads/content/rhel and install in the target machine.</li>
</ul>



<h1 class="wp-block-heading">4. Installation of Microshift</h1>



<ul>
<li>Create &#8216;edgenius&#8217; volume group as described in </li>



<li>Register the system using subscription-manager</li>
</ul>



<pre class="wp-block-code"><code>sudo subscription-manager register</code></pre>



<ul>
<li>Enable the Red Hat build of MicroShift repositories by running the following command</li>
</ul>



<pre class="wp-block-code"><code>sudo subscription-manager repos \
    --enable rhocp-4.13-for-rhel-9-$(uname -m)-rpms \
    --enable fast-datapath-for-rhel-9-$(uname -m)-rpms</code></pre>



<ul>
<li>Install Red Hat build of MicroShift and openshift clients by running the following command.</li>
</ul>



<pre class="wp-block-code"><code>sudo dnf install -y microshift openshift-clients</code></pre>



<ul>
<li>Configure firewall rules</li>
</ul>



<pre class="wp-block-code"><code>sudo firewall-cmd --permanent --zone=trusted --add-source=10.42.0.0/16
sudo firewall-cmd --permanent --zone=trusted --add-source=169.254.169.1
sudo firewall-cmd --reload</code></pre>



<ul>
<li>Download pull secret for Redhat registries. Refer <a href="https://dev.azure.com/ABB-BCI-PCP/PCP/_wiki/wikis/Digital%20Stream/39246/Installation-of-Microshift-4.13-on-RHEL-9.2?_a=edit&amp;anchor=5.2-download-pull-secret-for-redhat-registries">5.2 Download pull secret for Redhat registries</a></li>



<li>Upload file to target machine and rename file to pull-secret.json.</li>



<li>copy the pull secret to the /etc/crio folder.</li>
</ul>



<pre class="wp-block-code"><code>sudo cp pull-secret.json /etc/crio/openshift-pull-secret</code></pre>



<ul>
<li>Make the root user the owner of the /etc/crio/openshift-pull-secret file by running the following command.</li>
</ul>



<pre class="wp-block-code"><code>sudo chown root:root /etc/crio/openshift-pull-secret</code></pre>



<ul>
<li>Make the /etc/crio/openshift-pull-secret file readable and writeable by the root user only by running the following command.</li>
</ul>



<pre class="wp-block-code"><code>sudo chmod 600 /etc/crio/openshift-pull-secret</code></pre>



<ul>
<li>Creating an LVMS configuration file. When Red Hat build of MicroShift runs, it uses LVMS configuration from /etc/microshift/lvmd.yaml. Make sure that volume-group &#8216;edgenius&#8217; is created.</li>
</ul>



<pre class="wp-block-code"><code>sudo cp /etc/microshift/lvmd.yaml.default /etc/microshift/lvmd.yaml</code></pre>



<ul>
<li>Edit /etc/microshift/lvmd.yaml.</li>
</ul>



<pre class="wp-block-code"><code># Unix domain socket endpoint of gRPC
socket-name: /run/lvmd/lvmd.socket

device-classes:
  # The name of a device-class
  - name: default

    # The group where this device-class creates the logical volumes
    volume-group: edgenius

    # Storage capacity in GiB to be spared
    spare-gb: 0

    # A flag to indicate that this device-class is used by default
    default: true

    # The number of stripes in the logical volume
    #stripe: ""

    # The amount of data that is written to one device before moving to the next device
    #stripe-size: ""

    # Extra arguments to pass to lvcreate, e.g. &#91;"--type=raid1"]
    #lvcreate-options:
      #- ""</code></pre>



<ul>
<li>Start the Red Hat build of MicroShift service by entering the following command.</li>
</ul>



<pre class="wp-block-code"><code>sudo systemctl start microshift</code></pre>



<ul>
<li>To start MicroShift when machine starts, enter the following command.</li>
</ul>



<pre class="wp-block-code"><code>sudo systemctl enable microshift</code></pre>



<ul>
<li>Check the service logs by running below command</li>
</ul>



<pre class="wp-block-code"><code>journalctl -u microshift.service -f</code></pre>



<ul>
<li>Create kubeconfig file in home directory</li>
</ul>



<pre class="wp-block-code"><code>mkdir ~/.kube
sudo cat /var/lib/microshift/resources/kubeadmin/kubeconfig &gt; ~/.kube/config</code></pre>



<ul>
<li>Check the status of pods by running below command. The installation might take several minutes to complete.</li>
</ul>



<pre class="wp-block-code"><code>oc get po -A</code></pre>



<pre class="wp-block-code"><code>&#91;ability@localhost ~]$ oc get po -A
NAMESPACE                  NAME                                 READY   STATUS              RESTARTS   AGE
openshift-dns              node-resolver-mcdxd                  0/1     ContainerCreating   0          2m3s
openshift-ingress          router-default-65864549b5-fbrkl      0/1     Pending             0          2m3s
openshift-ovn-kubernetes   ovnkube-master-q729v                 0/4     ContainerCreating   0          2m3s
openshift-ovn-kubernetes   ovnkube-node-spbf4                   0/1     ContainerCreating   0          2m3s
openshift-service-ca       service-ca-764bd7f7b7-c82g5          0/1     Pending             0          2m4s
openshift-storage          topolvm-controller-f58fcd7cb-m9ng4   0/4     Pending             0          2m3s</code></pre>



<ul>
<li>To test microshift installation refer</li>
</ul>



<h1 class="wp-block-heading">5. Appendinx</h1>



<h2 class="wp-block-heading">5.1 Create edgenius volume group</h2>



<ul>
<li>Make sure that an extra hard disk is added for data peristence. Check the physical volumes in the machine by running the following command.</li>
</ul>



<pre class="wp-block-code"><code>pvs</code></pre>



<pre class="wp-block-code"><code>&#91;root@localhost ability]# pvs
  PV         VG   Fmt  Attr PSize    PFree
  /dev/sda2  rhel lvm2 a--  &lt;199.00g    0 </code></pre>



<ul>
<li>Create a PV</li>
</ul>



<pre class="wp-block-code"><code>pvcreate /dev/sdb</code></pre>



<pre class="wp-block-code"><code>&#91;root@localhost ability]# pvcreate /dev/sdb
  Physical volume "/dev/sdb" successfully created.
&#91;root@localhost ability]# pvs
  PV         VG   Fmt  Attr PSize    PFree  
  /dev/sda2  rhel lvm2 a--  &lt;199.00g      0 
  /dev/sdb        lvm2 ---   200.00g 200.00g</code></pre>



<ul>
<li>Create a new volume group</li>
</ul>



<pre class="wp-block-code"><code>vgcreate edgenius /dev/sdb </code></pre>



<pre class="wp-block-code"><code>&#91;root@localhost ability]# vgcreate edgenius /dev/sdb
  Volume group "edgenius" successfully created</code></pre>



<ul>
<li>Check the pvs in the machine.</li>
</ul>



<pre class="wp-block-code"><code>&#91;root@localhost ability]# pvs
  PV         VG       Fmt  Attr PSize    PFree   
  /dev/sda2  rhel     lvm2 a--  &lt;199.00g       0 
  /dev/sdb   edgenius lvm2 a--  &lt;200.00g &lt;200.00g</code></pre>



<h2 class="wp-block-heading">5.2 Download pull secret for Redhat registries</h2>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="460" src="/wp-content/uploads/2023/07/Screenshot-2023-07-30-175459-1024x460.png" alt="" class="wp-image-26" srcset="/wp-content/uploads/2023/07/Screenshot-2023-07-30-175459-1024x460.png 1024w, /wp-content/uploads/2023/07/Screenshot-2023-07-30-175459-300x135.png 300w, /wp-content/uploads/2023/07/Screenshot-2023-07-30-175459-768x345.png 768w, /wp-content/uploads/2023/07/Screenshot-2023-07-30-175459-1536x690.png 1536w, /wp-content/uploads/2023/07/Screenshot-2023-07-30-175459.png 1659w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<ul>
<li>Access https://console.redhat.com/openshift/install/pull-secret.</li>



<li>Login with Redhat credentials.</li>



<li>Click on &#8216;Download pull secret&#8217; to get the pull-secret.txt file.</li>
</ul>



<h2 class="wp-block-heading">5.3 Test microshift installation</h2>



<ul>
<li>Create namespace</li>
</ul>



<pre class="wp-block-code"><code>oc create ns test</code></pre>



<ul>
<li>Create test.yaml and copy below contents.</li>
</ul>



<pre class="wp-block-code"><code>kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-lv-pvc
  namespace: test
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1G
---
apiVersion: v1
kind: Pod
metadata:
  name: my-pod
  namespace: test
spec:
  containers:
  - name: nginx
    image: quay.io/jitesoft/nginx
    command: &#91;"/bin/sleep", "1d"]
    volumeMounts:
    - mountPath: /mnt
      name: my-volume
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
  volumes:
    - name: my-volume
      persistentVolumeClaim:
        claimName: my-lv-pvc</code></pre>



<ul>
<li>Create pvc and pod</li>
</ul>



<pre class="wp-block-code"><code>oc create -f test.yaml</code></pre>



<ul>
<li>Check the status of pod, pvc and pv.</li>
</ul>



<pre class="wp-block-code"><code>&#91;ability@localhost test]$ oc get po -n test
NAME     READY   STATUS    RESTARTS   AGE
my-pod   1/1     Running   0          2m7s
&#91;ability@localhost test]$ oc get pvc -n test
NAME        STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS          AGE
my-lv-pvc   Bound    pvc-1d6e6430-b052-4c4b-8ff2-df3b23dd9160   1Gi        RWO            topolvm-provisioner   2m13s
&#91;ability@localhost test]$ oc get pv -n test
NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM            STORAGECLASS          REASON   AGE
pvc-1d6e6430-b052-4c4b-8ff2-df3b23dd9160   1Gi        RWO            Delete           Bound    test/my-lv-pvc   topolvm-provisioner            2m19s</code></pre>



<h1 class="wp-block-heading">6. Document History</h1>
]]></content:encoded>
					
					<wfw:commentRss>/2023/07/30/installation-of-microshift-4-13-on-rhel-9-2/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Kubernetes Hardway using ansible</title>
		<link>/2023/07/30/kubernetes-hardway-using-ansible/</link>
					<comments>/2023/07/30/kubernetes-hardway-using-ansible/#respond</comments>
		
		<dc:creator><![CDATA[ability]]></dc:creator>
		<pubDate>Sun, 30 Jul 2023 11:08:35 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">/?p=13</guid>

					<description><![CDATA[# k3s-otel-demo sudo apt update sudo add-apt-repository &#8211;yes &#8211;update ppa:ansible/ansible sudo DEBIAN_FRONTEND=noninteractive apt install software-properties-common unzip sshpass python3-pip ansible -y pip3 install kubernetes curl -sfL https://get.k3s.io/ &#124; K3S_KUBECONFIG_MODE=&#8221;644&#8243; INSTALL_K3S_EXEC=&#8221;server &#8211;disable=traefik&#8221; sh &#8211; pip3 install locust sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config kubectl patch svc edgenius-otel-collector &#8211;type=&#8217;json&#8217; -p \ &#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30000}]&#8217; kubectl patch svc loki &#8211;type=&#8217;json&#8217; -p \ &#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30010}]&#8217; ... <a title="Kubernetes Hardway using ansible" class="read-more" href="/2023/07/30/kubernetes-hardway-using-ansible/" aria-label="More on Kubernetes Hardway using ansible">Read more</a>]]></description>
										<content:encoded><![CDATA[
<p><strong># k3s-otel-demo</strong></p>



<p>sudo apt update</p>



<p>sudo add-apt-repository &#8211;yes &#8211;update ppa:ansible/ansible</p>



<p>sudo DEBIAN_FRONTEND=noninteractive apt install software-properties-common unzip sshpass python3-pip ansible -y</p>



<p>pip3 install kubernetes</p>



<p>curl -sfL https://get.k3s.io/ | K3S_KUBECONFIG_MODE=&#8221;644&#8243; INSTALL_K3S_EXEC=&#8221;server &#8211;disable=traefik&#8221; sh &#8211;</p>



<p>pip3 install locust</p>



<p>sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config</p>



<p>kubectl patch svc edgenius-otel-collector &#8211;type=&#8217;json&#8217; -p \</p>



<p>&#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30000}]&#8217;</p>



<p>kubectl patch svc loki &#8211;type=&#8217;json&#8217; -p \</p>



<p>&#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30010}]&#8217;</p>



<p>kubectl patch svc cadvisor -n cadvisor &#8211;type=&#8217;json&#8217; -p \</p>



<p>&#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30011}]&#8217;</p>



<p>kubectl patch svc edgenius-node-exporter &nbsp;&#8211;type=&#8217;json&#8217; -p \</p>



<p>&#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30002}]&#8217;</p>



<p>kubectl patch svc kube-state-metrics -n kube-system &#8211;type=&#8217;json&#8217; -p \</p>



<p>&#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30003}]&#8217;</p>



<p>kubectl patch svc edgenius-kb-http &#8211;type=&#8217;json&#8217; -p \</p>



<p>&#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30011}]&#8217;</p>



<p>kubectl patch svc edgenius-apm-http &#8211;type=&#8217;json&#8217; -p \</p>



<p>&#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30012}]&#8217;</p>



<p>kubectl patch svc wordpress -n edgenius &#8211;type=&#8217;json&#8217; -p \</p>



<p>&#8216;[{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/type&#8221;,&#8221;value&#8221;:&#8221;NodePort&#8221;},{&#8220;op&#8221;:&#8221;replace&#8221;,&#8221;path&#8221;:&#8221;/spec/ports/0/nodePort&#8221;,&#8221;value&#8221;:30000}]&#8217;</p>



<p>kubectl get secret edgenius-es-elastic-user -o=jsonpath='{.data.elastic}&#8217; | base64 &#8211;decode; echo</p>



<p>kubectl get secret/edgenius-apm-token -o go-template='{{index .data &#8220;secret-token&#8221; | base64decode}}&#8217;; echo</p>



<p>curl kube-state-metrics.kube-system.svc.cluster.local:8080/metrics</p>



<p>curl edgenius-node-exporter.edgenius.svc.cluster.local:9100/metrics</p>



<p>curl edgenius-node-exporter:9100/metrics</p>



<p>curl edgenius-otel:8080/metrics</p>



<p>curl kube-api.kube-system.svc.cluster.local:6443</p>



<p>curl openshift-console.edgenius.svc.cluster.local</p>



<p>sudo kubectl config set-context &#8211;current &#8211;namespace=edgenius</p>



<p>curl -kX POST https://eck.abb.com/apm/ -H &#8220;Authorization: Bearer 70SPJT0a1mGlrfo260F1h3w8&#8221;</p>



<p>http://prometheus-kube-prometheus-prometheus.observability.svc.cluster.local:9090/</p>



<p>helm upgrade mimir grafana/mimir-distributed -n edgenius -f values.yaml</p>



<p>&#8211; name: apm-server</p>



<p>requests:</p>



<p>memory: 150Mi</p>



<p>cpu: 100m</p>



<p>limits:</p>



<p>memory: 250Mi</p>



<p>cpu: 150m</p>



<p>&#8211; name: elasticsearch</p>



<p>resources:</p>



<p>requests:</p>



<p>memory: 4Gi</p>



<p>cpu: 300m</p>



<p>limits:</p>



<p>memory: 4Gi</p>



<p>cpu: 600m</p>



<p>&#8211; name: kibana</p>



<p>resources:</p>



<p>requests:</p>



<p>memory: 600Mi</p>



<p>cpu: 50m</p>



<p>limits:</p>



<p>memory: 1Gi</p>



<p>cpu: 100m</p>



<p>&#8211; name: assetapi</p>



<p>resources:</p>



<p>requests:</p>



<p>memory: 250Mi</p>



<p>cpu: 50m</p>



<p>limits:</p>



<p>memory: 500Mi</p>



<p>cpu: 100m</p>



<p>&#8211; name: dataapi</p>



<p>resources:</p>



<p>requests:</p>



<p>memory: 150Mi</p>



<p>cpu: &#8220;100m</p>



<p>limits:</p>



<p>memory: 300Mi</p>



<p>cpu: 200m</p>



<p>&nbsp;&#8211; name: eventapi</p>



<p>resources:</p>



<p>requests:</p>



<p>memory: 150Mi</p>



<p>cpu: 20m</p>



<p>limits:</p>



<p>memory: 250Mi</p>



<p>cpu: 50m</p>



<p>&#8211; name: variableapi</p>



<p>resources:</p>



<p>requests:</p>



<p>memory: 250Mi</p>



<p>cpu: 50m</p>



<p>limits:</p>



<p>memory: 400Mi</p>



<p>cpu: 150m</p>



<p>{&#8220;edge_ip&#8221;:&#8221;192.168.0.149&#8243;,&#8221;edge_name&#8221;:&#8221;edge-rinoy&#8221;,&#8221;service.instance.id&#8221;:&#8221;27d38c17-1a84-4334-be9e-659c11b30f59&#8243;,&#8221;service.name&#8221;:&#8221;AssetApi&#8221;,&#8221;telemetry.sdk.language&#8221;:&#8221;dotnet&#8221;,&#8221;telemetry.sdk.name&#8221;:&#8221;opentelemetry&#8221;,&#8221;telemetry.sdk.version&#8221;:&#8221;1.5.0&#8243;}</p>



<p>node_cpu_seconds_total</p>



<p>count(count(node_cpu_seconds_total) by (cpu))</p>



<figure class="wp-block-embed"><div class="wp-block-embed__wrapper">
https://resume.io/r/z6mODq175
</div></figure>



<p>yum install python3.11-pip</p>



<p>/usr/bin/pip3.11 install jmespath</p>
]]></content:encoded>
					
					<wfw:commentRss>/2023/07/30/kubernetes-hardway-using-ansible/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Hello world!</title>
		<link>/2023/07/30/hello-world/</link>
					<comments>/2023/07/30/hello-world/#comments</comments>
		
		<dc:creator><![CDATA[ability]]></dc:creator>
		<pubDate>Sun, 30 Jul 2023 09:28:57 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">/?p=1</guid>

					<description><![CDATA[Welcome to WordPress. This is your first post. Edit or delete it, then start writing!]]></description>
										<content:encoded><![CDATA[
<p>Welcome to WordPress. This is your first post. Edit or delete it, then start writing!</p>
]]></content:encoded>
					
					<wfw:commentRss>/2023/07/30/hello-world/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
